Grammar

    0 $accept: program $end

    1 program: global_list function_list

    2 global_list: %empty
    3            | global_list global_var

    4 global_var: _TYPE _ID _SEMICOLON

    5 function_list: function
    6              | function_list function

    7 $@1: %empty

    8 function: _TYPE _ID $@1 _LPAREN parameter_list _RPAREN body

    9 parameter_list: %empty
   10               | parameters

   11 parameters: _TYPE _ID
   12           | parameters _COMMA _TYPE _ID

   13 $@2: %empty

   14 $@3: %empty

   15 body: _LBRACKET $@2 variable_list $@3 statement_list _RBRACKET

   16 variable_list: %empty
   17              | variable_list variable

   18 $@4: %empty

   19 variable: _TYPE $@4 vars _SEMICOLON

   20 vars: _ID
   21     | vars _COMMA _ID
   22     | _ID _ASSIGN literal
   23     | vars _COMMA _ID _ASSIGN literal

   24 statement_list: %empty
   25               | statement_list statement

   26 statement: compound_statement
   27          | assignment_statement
   28          | if_statement
   29          | return_statement
   30          | while_statement

   31 $@5: %empty

   32 statement: $@5 for_statement
   33          | function_call _SEMICOLON
   34          | check_statement
   35          | increment

   36 increment: _ID _INCREMENT _SEMICOLON

   37 $@6: %empty

   38 compound_statement: _LBRACKET $@6 variable_list statement_list _RBRACKET

   39 $@7: %empty

   40 assignment_statement: _ID _ASSIGN $@7 num_exp _SEMICOLON

   41 num_exp: exp
   42        | num_exp _AROP exp

   43 exp: literal
   44    | _ID
   45    | _ID _INCREMENT
   46    | function_call
   47    | conditional_exp
   48    | _LPAREN num_exp _RPAREN

   49 literal: _INT_NUMBER
   50        | _UINT_NUMBER

   51 $@8: %empty

   52 function_call: _ID $@8 _LPAREN arguments _RPAREN

   53 arguments: argument
   54          | arguments _AROP argument
   55          | arguments _COMMA argument

   56 argument: %empty
   57         | _ID
   58         | literal
   59         | _ID _INCREMENT

   60 if_statement: if_part
   61             | if_part _ELSE statement

   62 @9: %empty

   63 $@10: %empty

   64 if_part: _IF _LPAREN @9 rel_expresions $@10 _RPAREN statement

   65 $@11: %empty

   66 check_statement: _CHECK _LPAREN check_expression _RPAREN _LBRACKET cases $@11 otherwise _RBRACKET
   67                | _CHECK _LPAREN check_expression _RPAREN _LBRACKET cases _RBRACKET

   68 check_expression: _ID

   69 cases: case_statement
   70      | cases case_statement

   71 $@12: %empty

   72 case_statement: _CASE literal $@12 _ARROW case_body

   73 case_body: statement

   74 $@13: %empty

   75 case_body: statement $@13 _BREAK _SEMICOLON

   76 otherwise: _OTHERWISE _ARROW statement
   77          | _OTHERWISE _ARROW statement _BREAK _SEMICOLON

   78 $@14: %empty

   79 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal _DOTDOT literal _RPAREN $@14 statement

   80 $@15: %empty

   81 $@16: %empty

   82 while_statement: _WHILE _LPAREN $@15 rel_expresions $@16 _RPAREN statement

   83 @17: %empty

   84 $@18: %empty

   85 conditional_exp: _LPAREN rel_expresions @17 _RPAREN _QUESTION exp $@18 _DOTDOT exp

   86 rel_expresions: rel_exp
   87               | rel_expresions _OR rel_exp
   88               | rel_expresions _AND rel_exp

   89 rel_exp: num_exp _RELOP num_exp

   90 return_statement: _RETURN num_exp _SEMICOLON
   91                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 4 8 11 12 19 79
    _IF (259) 64
    _ELSE (260) 61
    _RETURN (261) 90 91
    _ID <s> (262) 4 8 11 12 20 21 22 23 36 40 44 45 52 57 59 68 79
    _INT_NUMBER <s> (263) 49
    _UINT_NUMBER <s> (264) 50
    _LPAREN (265) 8 48 52 64 66 67 79 82 85
    _RPAREN (266) 8 48 52 64 66 67 79 82 85
    _LBRACKET (267) 15 38 66 67
    _RBRACKET (268) 15 38 66 67
    _ASSIGN (269) 22 23 40 79
    _SEMICOLON (270) 4 19 33 36 40 75 77 90 91
    _AROP <i> (271) 42 54
    _RELOP <i> (272) 89
    _COMMA (273) 12 21 23 55
    _QUESTION (274) 85
    _INCREMENT (275) 36 45 59
    _WHILE (276) 82
    _FOR (277) 79
    _DOTDOT (278) 79 85
    _AND (279) 88
    _OR (280) 87
    _CHECK (281) 66 67
    _CASE (282) 72
    _ARROW (283) 72 76 77
    _BREAK (284) 75 77
    _OTHERWISE (285) 76 77
    ONLY_IF (286)


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program (33)
        on left: 1
        on right: 0
    global_list (34)
        on left: 2 3
        on right: 1 3
    global_var (35)
        on left: 4
        on right: 3
    function_list (36)
        on left: 5 6
        on right: 1 6
    function (37)
        on left: 8
        on right: 5 6
    $@1 (38)
        on left: 7
        on right: 8
    parameter_list (39)
        on left: 9 10
        on right: 8
    parameters (40)
        on left: 11 12
        on right: 10 12
    body (41)
        on left: 15
        on right: 8
    $@2 (42)
        on left: 13
        on right: 15
    $@3 (43)
        on left: 14
        on right: 15
    variable_list (44)
        on left: 16 17
        on right: 15 17 38
    variable (45)
        on left: 19
        on right: 17
    $@4 (46)
        on left: 18
        on right: 19
    vars (47)
        on left: 20 21 22 23
        on right: 19 21 23
    statement_list (48)
        on left: 24 25
        on right: 15 25 38
    statement (49)
        on left: 26 27 28 29 30 32 33 34 35
        on right: 25 61 64 73 75 76 77 79 82
    $@5 (50)
        on left: 31
        on right: 32
    increment (51)
        on left: 36
        on right: 35
    compound_statement (52)
        on left: 38
        on right: 26
    $@6 (53)
        on left: 37
        on right: 38
    assignment_statement (54)
        on left: 40
        on right: 27
    $@7 (55)
        on left: 39
        on right: 40
    num_exp <i> (56)
        on left: 41 42
        on right: 40 42 48 89 90
    exp <i> (57)
        on left: 43 44 45 46 47 48
        on right: 41 42 85
    literal <i> (58)
        on left: 49 50
        on right: 22 23 43 58 72 79
    function_call <i> (59)
        on left: 52
        on right: 33 46
    $@8 (60)
        on left: 51
        on right: 52
    arguments <i> (61)
        on left: 53 54 55
        on right: 52 54 55
    argument <i> (62)
        on left: 56 57 58 59
        on right: 53 54 55
    if_statement (63)
        on left: 60 61
        on right: 28
    if_part <i> (64)
        on left: 64
        on right: 60 61
    @9 (65)
        on left: 62
        on right: 64
    $@10 (66)
        on left: 63
        on right: 64
    check_statement (67)
        on left: 66 67
        on right: 34
    $@11 (68)
        on left: 65
        on right: 66
    check_expression (69)
        on left: 68
        on right: 66 67
    cases (70)
        on left: 69 70
        on right: 66 67 70
    case_statement (71)
        on left: 72
        on right: 69 70
    $@12 (72)
        on left: 71
        on right: 72
    case_body (73)
        on left: 73 75
        on right: 72
    $@13 (74)
        on left: 74
        on right: 75
    otherwise (75)
        on left: 76 77
        on right: 66
    for_statement (76)
        on left: 79
        on right: 32
    $@14 (77)
        on left: 78
        on right: 79
    while_statement (78)
        on left: 82
        on right: 30
    $@15 (79)
        on left: 80
        on right: 82
    $@16 (80)
        on left: 81
        on right: 82
    conditional_exp <i> (81)
        on left: 85
        on right: 47
    @17 (82)
        on left: 83
        on right: 85
    $@18 (83)
        on left: 84
        on right: 85
    rel_expresions <i> (84)
        on left: 86 87 88
        on right: 64 82 85 87 88
    rel_exp <i> (85)
        on left: 89
        on right: 86 87 88
    return_statement (86)
        on left: 90 91
        on right: 29


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (global_list)

    program      go to state 1
    global_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_list . function_list
    3 global_list: global_list . global_var

    _TYPE  shift, and go to state 4

    global_var     go to state 5
    function_list  go to state 6
    function       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 global_var: _TYPE . _ID _SEMICOLON
    8 function: _TYPE . _ID $@1 _LPAREN parameter_list _RPAREN body

    _ID  shift, and go to state 8


State 5

    3 global_list: global_list global_var .

    $default  reduce using rule 3 (global_list)


State 6

    1 program: global_list function_list .
    6 function_list: function_list . function

    _TYPE  shift, and go to state 9

    $default  reduce using rule 1 (program)

    function  go to state 10


State 7

    5 function_list: function .

    $default  reduce using rule 5 (function_list)


State 8

    4 global_var: _TYPE _ID . _SEMICOLON
    8 function: _TYPE _ID . $@1 _LPAREN parameter_list _RPAREN body

    _SEMICOLON  shift, and go to state 11

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 9

    8 function: _TYPE . _ID $@1 _LPAREN parameter_list _RPAREN body

    _ID  shift, and go to state 13


State 10

    6 function_list: function_list function .

    $default  reduce using rule 6 (function_list)


State 11

    4 global_var: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 4 (global_var)


State 12

    8 function: _TYPE _ID $@1 . _LPAREN parameter_list _RPAREN body

    _LPAREN  shift, and go to state 14


State 13

    8 function: _TYPE _ID . $@1 _LPAREN parameter_list _RPAREN body

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 14

    8 function: _TYPE _ID $@1 _LPAREN . parameter_list _RPAREN body

    _TYPE  shift, and go to state 15

    $default  reduce using rule 9 (parameter_list)

    parameter_list  go to state 16
    parameters      go to state 17


State 15

   11 parameters: _TYPE . _ID

    _ID  shift, and go to state 18


State 16

    8 function: _TYPE _ID $@1 _LPAREN parameter_list . _RPAREN body

    _RPAREN  shift, and go to state 19


State 17

   10 parameter_list: parameters .
   12 parameters: parameters . _COMMA _TYPE _ID

    _COMMA  shift, and go to state 20

    $default  reduce using rule 10 (parameter_list)


State 18

   11 parameters: _TYPE _ID .

    $default  reduce using rule 11 (parameters)


State 19

    8 function: _TYPE _ID $@1 _LPAREN parameter_list _RPAREN . body

    _LBRACKET  shift, and go to state 21

    body  go to state 22


State 20

   12 parameters: parameters _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 23


State 21

   15 body: _LBRACKET . $@2 variable_list $@3 statement_list _RBRACKET

    $default  reduce using rule 13 ($@2)

    $@2  go to state 24


State 22

    8 function: _TYPE _ID $@1 _LPAREN parameter_list _RPAREN body .

    $default  reduce using rule 8 (function)


State 23

   12 parameters: parameters _COMMA _TYPE . _ID

    _ID  shift, and go to state 25


State 24

   15 body: _LBRACKET $@2 . variable_list $@3 statement_list _RBRACKET

    $default  reduce using rule 16 (variable_list)

    variable_list  go to state 26


State 25

   12 parameters: parameters _COMMA _TYPE _ID .

    $default  reduce using rule 12 (parameters)


State 26

   15 body: _LBRACKET $@2 variable_list . $@3 statement_list _RBRACKET
   17 variable_list: variable_list . variable

    _TYPE  shift, and go to state 27

    $default  reduce using rule 14 ($@3)

    $@3       go to state 28
    variable  go to state 29


State 27

   19 variable: _TYPE . $@4 vars _SEMICOLON

    $default  reduce using rule 18 ($@4)

    $@4  go to state 30


State 28

   15 body: _LBRACKET $@2 variable_list $@3 . statement_list _RBRACKET

    $default  reduce using rule 24 (statement_list)

    statement_list  go to state 31


State 29

   17 variable_list: variable_list variable .

    $default  reduce using rule 17 (variable_list)


State 30

   19 variable: _TYPE $@4 . vars _SEMICOLON

    _ID  shift, and go to state 32

    vars  go to state 33


State 31

   15 body: _LBRACKET $@2 variable_list $@3 statement_list . _RBRACKET
   25 statement_list: statement_list . statement

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _RBRACKET  shift, and go to state 38
    _WHILE     shift, and go to state 39
    _CHECK     shift, and go to state 40

    $default  reduce using rule 31 ($@5)

    statement             go to state 41
    $@5                   go to state 42
    increment             go to state 43
    compound_statement    go to state 44
    assignment_statement  go to state 45
    function_call         go to state 46
    if_statement          go to state 47
    if_part               go to state 48
    check_statement       go to state 49
    while_statement       go to state 50
    return_statement      go to state 51


State 32

   20 vars: _ID .
   22     | _ID . _ASSIGN literal

    _ASSIGN  shift, and go to state 52

    $default  reduce using rule 20 (vars)


State 33

   19 variable: _TYPE $@4 vars . _SEMICOLON
   21 vars: vars . _COMMA _ID
   23     | vars . _COMMA _ID _ASSIGN literal

    _SEMICOLON  shift, and go to state 53
    _COMMA      shift, and go to state 54


State 34

   64 if_part: _IF . _LPAREN @9 rel_expresions $@10 _RPAREN statement

    _LPAREN  shift, and go to state 55


State 35

   90 return_statement: _RETURN . num_exp _SEMICOLON
   91                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59
    _SEMICOLON    shift, and go to state 60

    num_exp          go to state 61
    exp              go to state 62
    literal          go to state 63
    function_call    go to state 64
    conditional_exp  go to state 65


State 36

   36 increment: _ID . _INCREMENT _SEMICOLON
   40 assignment_statement: _ID . _ASSIGN $@7 num_exp _SEMICOLON
   52 function_call: _ID . $@8 _LPAREN arguments _RPAREN

    _ASSIGN     shift, and go to state 66
    _INCREMENT  shift, and go to state 67

    $default  reduce using rule 51 ($@8)

    $@8  go to state 68


State 37

   38 compound_statement: _LBRACKET . $@6 variable_list statement_list _RBRACKET

    $default  reduce using rule 37 ($@6)

    $@6  go to state 69


State 38

   15 body: _LBRACKET $@2 variable_list $@3 statement_list _RBRACKET .

    $default  reduce using rule 15 (body)


State 39

   82 while_statement: _WHILE . _LPAREN $@15 rel_expresions $@16 _RPAREN statement

    _LPAREN  shift, and go to state 70


State 40

   66 check_statement: _CHECK . _LPAREN check_expression _RPAREN _LBRACKET cases $@11 otherwise _RBRACKET
   67                | _CHECK . _LPAREN check_expression _RPAREN _LBRACKET cases _RBRACKET

    _LPAREN  shift, and go to state 71


State 41

   25 statement_list: statement_list statement .

    $default  reduce using rule 25 (statement_list)


State 42

   32 statement: $@5 . for_statement

    _FOR  shift, and go to state 72

    for_statement  go to state 73


State 43

   35 statement: increment .

    $default  reduce using rule 35 (statement)


State 44

   26 statement: compound_statement .

    $default  reduce using rule 26 (statement)


State 45

   27 statement: assignment_statement .

    $default  reduce using rule 27 (statement)


State 46

   33 statement: function_call . _SEMICOLON

    _SEMICOLON  shift, and go to state 74


State 47

   28 statement: if_statement .

    $default  reduce using rule 28 (statement)


State 48

   60 if_statement: if_part .
   61             | if_part . _ELSE statement

    _ELSE  shift, and go to state 75

    $default  reduce using rule 60 (if_statement)


State 49

   34 statement: check_statement .

    $default  reduce using rule 34 (statement)


State 50

   30 statement: while_statement .

    $default  reduce using rule 30 (statement)


State 51

   29 statement: return_statement .

    $default  reduce using rule 29 (statement)


State 52

   22 vars: _ID _ASSIGN . literal

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 76


State 53

   19 variable: _TYPE $@4 vars _SEMICOLON .

    $default  reduce using rule 19 (variable)


State 54

   21 vars: vars _COMMA . _ID
   23     | vars _COMMA . _ID _ASSIGN literal

    _ID  shift, and go to state 77


State 55

   64 if_part: _IF _LPAREN . @9 rel_expresions $@10 _RPAREN statement

    $default  reduce using rule 62 (@9)

    @9  go to state 78


State 56

   44 exp: _ID .
   45    | _ID . _INCREMENT
   52 function_call: _ID . $@8 _LPAREN arguments _RPAREN

    _INCREMENT  shift, and go to state 79

    _LPAREN   reduce using rule 51 ($@8)
    $default  reduce using rule 44 (exp)

    $@8  go to state 68


State 57

   49 literal: _INT_NUMBER .

    $default  reduce using rule 49 (literal)


State 58

   50 literal: _UINT_NUMBER .

    $default  reduce using rule 50 (literal)


State 59

   48 exp: _LPAREN . num_exp _RPAREN
   85 conditional_exp: _LPAREN . rel_expresions @17 _RPAREN _QUESTION exp $@18 _DOTDOT exp

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp          go to state 80
    exp              go to state 62
    literal          go to state 63
    function_call    go to state 64
    conditional_exp  go to state 65
    rel_expresions   go to state 81
    rel_exp          go to state 82


State 60

   91 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 91 (return_statement)


State 61

   42 num_exp: num_exp . _AROP exp
   90 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 83
    _AROP       shift, and go to state 84


State 62

   41 num_exp: exp .

    $default  reduce using rule 41 (num_exp)


State 63

   43 exp: literal .

    $default  reduce using rule 43 (exp)


State 64

   46 exp: function_call .

    $default  reduce using rule 46 (exp)


State 65

   47 exp: conditional_exp .

    $default  reduce using rule 47 (exp)


State 66

   40 assignment_statement: _ID _ASSIGN . $@7 num_exp _SEMICOLON

    $default  reduce using rule 39 ($@7)

    $@7  go to state 85


State 67

   36 increment: _ID _INCREMENT . _SEMICOLON

    _SEMICOLON  shift, and go to state 86


State 68

   52 function_call: _ID $@8 . _LPAREN arguments _RPAREN

    _LPAREN  shift, and go to state 87


State 69

   38 compound_statement: _LBRACKET $@6 . variable_list statement_list _RBRACKET

    $default  reduce using rule 16 (variable_list)

    variable_list  go to state 88


State 70

   82 while_statement: _WHILE _LPAREN . $@15 rel_expresions $@16 _RPAREN statement

    $default  reduce using rule 80 ($@15)

    $@15  go to state 89


State 71

   66 check_statement: _CHECK _LPAREN . check_expression _RPAREN _LBRACKET cases $@11 otherwise _RBRACKET
   67                | _CHECK _LPAREN . check_expression _RPAREN _LBRACKET cases _RBRACKET

    _ID  shift, and go to state 90

    check_expression  go to state 91


State 72

   79 for_statement: _FOR . _LPAREN _TYPE _ID _ASSIGN literal _DOTDOT literal _RPAREN $@14 statement

    _LPAREN  shift, and go to state 92


State 73

   32 statement: $@5 for_statement .

    $default  reduce using rule 32 (statement)


State 74

   33 statement: function_call _SEMICOLON .

    $default  reduce using rule 33 (statement)


State 75

   61 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _WHILE     shift, and go to state 39
    _CHECK     shift, and go to state 40

    $default  reduce using rule 31 ($@5)

    statement             go to state 93
    $@5                   go to state 42
    increment             go to state 43
    compound_statement    go to state 44
    assignment_statement  go to state 45
    function_call         go to state 46
    if_statement          go to state 47
    if_part               go to state 48
    check_statement       go to state 49
    while_statement       go to state 50
    return_statement      go to state 51


State 76

   22 vars: _ID _ASSIGN literal .

    $default  reduce using rule 22 (vars)


State 77

   21 vars: vars _COMMA _ID .
   23     | vars _COMMA _ID . _ASSIGN literal

    _ASSIGN  shift, and go to state 94

    $default  reduce using rule 21 (vars)


State 78

   64 if_part: _IF _LPAREN @9 . rel_expresions $@10 _RPAREN statement

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp          go to state 95
    exp              go to state 62
    literal          go to state 63
    function_call    go to state 64
    conditional_exp  go to state 65
    rel_expresions   go to state 96
    rel_exp          go to state 82


State 79

   45 exp: _ID _INCREMENT .

    $default  reduce using rule 45 (exp)


State 80

   42 num_exp: num_exp . _AROP exp
   48 exp: _LPAREN num_exp . _RPAREN
   89 rel_exp: num_exp . _RELOP num_exp

    _RPAREN  shift, and go to state 97
    _AROP    shift, and go to state 84
    _RELOP   shift, and go to state 98


State 81

   85 conditional_exp: _LPAREN rel_expresions . @17 _RPAREN _QUESTION exp $@18 _DOTDOT exp
   87 rel_expresions: rel_expresions . _OR rel_exp
   88               | rel_expresions . _AND rel_exp

    _AND  shift, and go to state 99
    _OR   shift, and go to state 100

    $default  reduce using rule 83 (@17)

    @17  go to state 101


State 82

   86 rel_expresions: rel_exp .

    $default  reduce using rule 86 (rel_expresions)


State 83

   90 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 90 (return_statement)


State 84

   42 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    exp              go to state 102
    literal          go to state 63
    function_call    go to state 64
    conditional_exp  go to state 65


State 85

   40 assignment_statement: _ID _ASSIGN $@7 . num_exp _SEMICOLON

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp          go to state 103
    exp              go to state 62
    literal          go to state 63
    function_call    go to state 64
    conditional_exp  go to state 65


State 86

   36 increment: _ID _INCREMENT _SEMICOLON .

    $default  reduce using rule 36 (increment)


State 87

   52 function_call: _ID $@8 _LPAREN . arguments _RPAREN

    _ID           shift, and go to state 104
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    $default  reduce using rule 56 (argument)

    literal    go to state 105
    arguments  go to state 106
    argument   go to state 107


State 88

   17 variable_list: variable_list . variable
   38 compound_statement: _LBRACKET $@6 variable_list . statement_list _RBRACKET

    _TYPE  shift, and go to state 27

    $default  reduce using rule 24 (statement_list)

    variable        go to state 29
    statement_list  go to state 108


State 89

   82 while_statement: _WHILE _LPAREN $@15 . rel_expresions $@16 _RPAREN statement

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp          go to state 95
    exp              go to state 62
    literal          go to state 63
    function_call    go to state 64
    conditional_exp  go to state 65
    rel_expresions   go to state 109
    rel_exp          go to state 82


State 90

   68 check_expression: _ID .

    $default  reduce using rule 68 (check_expression)


State 91

   66 check_statement: _CHECK _LPAREN check_expression . _RPAREN _LBRACKET cases $@11 otherwise _RBRACKET
   67                | _CHECK _LPAREN check_expression . _RPAREN _LBRACKET cases _RBRACKET

    _RPAREN  shift, and go to state 110


State 92

   79 for_statement: _FOR _LPAREN . _TYPE _ID _ASSIGN literal _DOTDOT literal _RPAREN $@14 statement

    _TYPE  shift, and go to state 111


State 93

   61 if_statement: if_part _ELSE statement .

    $default  reduce using rule 61 (if_statement)


State 94

   23 vars: vars _COMMA _ID _ASSIGN . literal

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 112


State 95

   42 num_exp: num_exp . _AROP exp
   89 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 84
    _RELOP  shift, and go to state 98


State 96

   64 if_part: _IF _LPAREN @9 rel_expresions . $@10 _RPAREN statement
   87 rel_expresions: rel_expresions . _OR rel_exp
   88               | rel_expresions . _AND rel_exp

    _AND  shift, and go to state 99
    _OR   shift, and go to state 100

    $default  reduce using rule 63 ($@10)

    $@10  go to state 113


State 97

   48 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 48 (exp)


State 98

   89 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp          go to state 114
    exp              go to state 62
    literal          go to state 63
    function_call    go to state 64
    conditional_exp  go to state 65


State 99

   88 rel_expresions: rel_expresions _AND . rel_exp

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp          go to state 95
    exp              go to state 62
    literal          go to state 63
    function_call    go to state 64
    conditional_exp  go to state 65
    rel_exp          go to state 115


State 100

   87 rel_expresions: rel_expresions _OR . rel_exp

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    num_exp          go to state 95
    exp              go to state 62
    literal          go to state 63
    function_call    go to state 64
    conditional_exp  go to state 65
    rel_exp          go to state 116


State 101

   85 conditional_exp: _LPAREN rel_expresions @17 . _RPAREN _QUESTION exp $@18 _DOTDOT exp

    _RPAREN  shift, and go to state 117


State 102

   42 num_exp: num_exp _AROP exp .

    $default  reduce using rule 42 (num_exp)


State 103

   40 assignment_statement: _ID _ASSIGN $@7 num_exp . _SEMICOLON
   42 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 118
    _AROP       shift, and go to state 84


State 104

   57 argument: _ID .
   59         | _ID . _INCREMENT

    _INCREMENT  shift, and go to state 119

    $default  reduce using rule 57 (argument)


State 105

   58 argument: literal .

    $default  reduce using rule 58 (argument)


State 106

   52 function_call: _ID $@8 _LPAREN arguments . _RPAREN
   54 arguments: arguments . _AROP argument
   55          | arguments . _COMMA argument

    _RPAREN  shift, and go to state 120
    _AROP    shift, and go to state 121
    _COMMA   shift, and go to state 122


State 107

   53 arguments: argument .

    $default  reduce using rule 53 (arguments)


State 108

   25 statement_list: statement_list . statement
   38 compound_statement: _LBRACKET $@6 variable_list statement_list . _RBRACKET

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _RBRACKET  shift, and go to state 123
    _WHILE     shift, and go to state 39
    _CHECK     shift, and go to state 40

    $default  reduce using rule 31 ($@5)

    statement             go to state 41
    $@5                   go to state 42
    increment             go to state 43
    compound_statement    go to state 44
    assignment_statement  go to state 45
    function_call         go to state 46
    if_statement          go to state 47
    if_part               go to state 48
    check_statement       go to state 49
    while_statement       go to state 50
    return_statement      go to state 51


State 109

   82 while_statement: _WHILE _LPAREN $@15 rel_expresions . $@16 _RPAREN statement
   87 rel_expresions: rel_expresions . _OR rel_exp
   88               | rel_expresions . _AND rel_exp

    _AND  shift, and go to state 99
    _OR   shift, and go to state 100

    $default  reduce using rule 81 ($@16)

    $@16  go to state 124


State 110

   66 check_statement: _CHECK _LPAREN check_expression _RPAREN . _LBRACKET cases $@11 otherwise _RBRACKET
   67                | _CHECK _LPAREN check_expression _RPAREN . _LBRACKET cases _RBRACKET

    _LBRACKET  shift, and go to state 125


State 111

   79 for_statement: _FOR _LPAREN _TYPE . _ID _ASSIGN literal _DOTDOT literal _RPAREN $@14 statement

    _ID  shift, and go to state 126


State 112

   23 vars: vars _COMMA _ID _ASSIGN literal .

    $default  reduce using rule 23 (vars)


State 113

   64 if_part: _IF _LPAREN @9 rel_expresions $@10 . _RPAREN statement

    _RPAREN  shift, and go to state 127


State 114

   42 num_exp: num_exp . _AROP exp
   89 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 84

    $default  reduce using rule 89 (rel_exp)


State 115

   88 rel_expresions: rel_expresions _AND rel_exp .

    $default  reduce using rule 88 (rel_expresions)


State 116

   87 rel_expresions: rel_expresions _OR rel_exp .

    $default  reduce using rule 87 (rel_expresions)


State 117

   85 conditional_exp: _LPAREN rel_expresions @17 _RPAREN . _QUESTION exp $@18 _DOTDOT exp

    _QUESTION  shift, and go to state 128


State 118

   40 assignment_statement: _ID _ASSIGN $@7 num_exp _SEMICOLON .

    $default  reduce using rule 40 (assignment_statement)


State 119

   59 argument: _ID _INCREMENT .

    $default  reduce using rule 59 (argument)


State 120

   52 function_call: _ID $@8 _LPAREN arguments _RPAREN .

    $default  reduce using rule 52 (function_call)


State 121

   54 arguments: arguments _AROP . argument

    _ID           shift, and go to state 104
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    $default  reduce using rule 56 (argument)

    literal   go to state 105
    argument  go to state 129


State 122

   55 arguments: arguments _COMMA . argument

    _ID           shift, and go to state 104
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    $default  reduce using rule 56 (argument)

    literal   go to state 105
    argument  go to state 130


State 123

   38 compound_statement: _LBRACKET $@6 variable_list statement_list _RBRACKET .

    $default  reduce using rule 38 (compound_statement)


State 124

   82 while_statement: _WHILE _LPAREN $@15 rel_expresions $@16 . _RPAREN statement

    _RPAREN  shift, and go to state 131


State 125

   66 check_statement: _CHECK _LPAREN check_expression _RPAREN _LBRACKET . cases $@11 otherwise _RBRACKET
   67                | _CHECK _LPAREN check_expression _RPAREN _LBRACKET . cases _RBRACKET

    _CASE  shift, and go to state 132

    cases           go to state 133
    case_statement  go to state 134


State 126

   79 for_statement: _FOR _LPAREN _TYPE _ID . _ASSIGN literal _DOTDOT literal _RPAREN $@14 statement

    _ASSIGN  shift, and go to state 135


State 127

   64 if_part: _IF _LPAREN @9 rel_expresions $@10 _RPAREN . statement

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _WHILE     shift, and go to state 39
    _CHECK     shift, and go to state 40

    $default  reduce using rule 31 ($@5)

    statement             go to state 136
    $@5                   go to state 42
    increment             go to state 43
    compound_statement    go to state 44
    assignment_statement  go to state 45
    function_call         go to state 46
    if_statement          go to state 47
    if_part               go to state 48
    check_statement       go to state 49
    while_statement       go to state 50
    return_statement      go to state 51


State 128

   85 conditional_exp: _LPAREN rel_expresions @17 _RPAREN _QUESTION . exp $@18 _DOTDOT exp

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    exp              go to state 137
    literal          go to state 63
    function_call    go to state 64
    conditional_exp  go to state 65


State 129

   54 arguments: arguments _AROP argument .

    $default  reduce using rule 54 (arguments)


State 130

   55 arguments: arguments _COMMA argument .

    $default  reduce using rule 55 (arguments)


State 131

   82 while_statement: _WHILE _LPAREN $@15 rel_expresions $@16 _RPAREN . statement

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _WHILE     shift, and go to state 39
    _CHECK     shift, and go to state 40

    $default  reduce using rule 31 ($@5)

    statement             go to state 138
    $@5                   go to state 42
    increment             go to state 43
    compound_statement    go to state 44
    assignment_statement  go to state 45
    function_call         go to state 46
    if_statement          go to state 47
    if_part               go to state 48
    check_statement       go to state 49
    while_statement       go to state 50
    return_statement      go to state 51


State 132

   72 case_statement: _CASE . literal $@12 _ARROW case_body

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 139


State 133

   66 check_statement: _CHECK _LPAREN check_expression _RPAREN _LBRACKET cases . $@11 otherwise _RBRACKET
   67                | _CHECK _LPAREN check_expression _RPAREN _LBRACKET cases . _RBRACKET
   70 cases: cases . case_statement

    _RBRACKET  shift, and go to state 140
    _CASE      shift, and go to state 132

    $default  reduce using rule 65 ($@11)

    $@11            go to state 141
    case_statement  go to state 142


State 134

   69 cases: case_statement .

    $default  reduce using rule 69 (cases)


State 135

   79 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN . literal _DOTDOT literal _RPAREN $@14 statement

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 143


State 136

   64 if_part: _IF _LPAREN @9 rel_expresions $@10 _RPAREN statement .

    $default  reduce using rule 64 (if_part)


State 137

   85 conditional_exp: _LPAREN rel_expresions @17 _RPAREN _QUESTION exp . $@18 _DOTDOT exp

    $default  reduce using rule 84 ($@18)

    $@18  go to state 144


State 138

   82 while_statement: _WHILE _LPAREN $@15 rel_expresions $@16 _RPAREN statement .

    $default  reduce using rule 82 (while_statement)


State 139

   72 case_statement: _CASE literal . $@12 _ARROW case_body

    $default  reduce using rule 71 ($@12)

    $@12  go to state 145


State 140

   67 check_statement: _CHECK _LPAREN check_expression _RPAREN _LBRACKET cases _RBRACKET .

    $default  reduce using rule 67 (check_statement)


State 141

   66 check_statement: _CHECK _LPAREN check_expression _RPAREN _LBRACKET cases $@11 . otherwise _RBRACKET

    _OTHERWISE  shift, and go to state 146

    otherwise  go to state 147


State 142

   70 cases: cases case_statement .

    $default  reduce using rule 70 (cases)


State 143

   79 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal . _DOTDOT literal _RPAREN $@14 statement

    _DOTDOT  shift, and go to state 148


State 144

   85 conditional_exp: _LPAREN rel_expresions @17 _RPAREN _QUESTION exp $@18 . _DOTDOT exp

    _DOTDOT  shift, and go to state 149


State 145

   72 case_statement: _CASE literal $@12 . _ARROW case_body

    _ARROW  shift, and go to state 150


State 146

   76 otherwise: _OTHERWISE . _ARROW statement
   77          | _OTHERWISE . _ARROW statement _BREAK _SEMICOLON

    _ARROW  shift, and go to state 151


State 147

   66 check_statement: _CHECK _LPAREN check_expression _RPAREN _LBRACKET cases $@11 otherwise . _RBRACKET

    _RBRACKET  shift, and go to state 152


State 148

   79 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal _DOTDOT . literal _RPAREN $@14 statement

    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 153


State 149

   85 conditional_exp: _LPAREN rel_expresions @17 _RPAREN _QUESTION exp $@18 _DOTDOT . exp

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 59

    exp              go to state 154
    literal          go to state 63
    function_call    go to state 64
    conditional_exp  go to state 65


State 150

   72 case_statement: _CASE literal $@12 _ARROW . case_body

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _WHILE     shift, and go to state 39
    _CHECK     shift, and go to state 40

    $default  reduce using rule 31 ($@5)

    statement             go to state 155
    $@5                   go to state 42
    increment             go to state 43
    compound_statement    go to state 44
    assignment_statement  go to state 45
    function_call         go to state 46
    if_statement          go to state 47
    if_part               go to state 48
    check_statement       go to state 49
    case_body             go to state 156
    while_statement       go to state 50
    return_statement      go to state 51


State 151

   76 otherwise: _OTHERWISE _ARROW . statement
   77          | _OTHERWISE _ARROW . statement _BREAK _SEMICOLON

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _WHILE     shift, and go to state 39
    _CHECK     shift, and go to state 40

    $default  reduce using rule 31 ($@5)

    statement             go to state 157
    $@5                   go to state 42
    increment             go to state 43
    compound_statement    go to state 44
    assignment_statement  go to state 45
    function_call         go to state 46
    if_statement          go to state 47
    if_part               go to state 48
    check_statement       go to state 49
    while_statement       go to state 50
    return_statement      go to state 51


State 152

   66 check_statement: _CHECK _LPAREN check_expression _RPAREN _LBRACKET cases $@11 otherwise _RBRACKET .

    $default  reduce using rule 66 (check_statement)


State 153

   79 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal _DOTDOT literal . _RPAREN $@14 statement

    _RPAREN  shift, and go to state 158


State 154

   85 conditional_exp: _LPAREN rel_expresions @17 _RPAREN _QUESTION exp $@18 _DOTDOT exp .

    $default  reduce using rule 85 (conditional_exp)


State 155

   73 case_body: statement .
   75          | statement . $@13 _BREAK _SEMICOLON

    _BREAK    reduce using rule 74 ($@13)
    $default  reduce using rule 73 (case_body)

    $@13  go to state 159


State 156

   72 case_statement: _CASE literal $@12 _ARROW case_body .

    $default  reduce using rule 72 (case_statement)


State 157

   76 otherwise: _OTHERWISE _ARROW statement .
   77          | _OTHERWISE _ARROW statement . _BREAK _SEMICOLON

    _BREAK  shift, and go to state 160

    $default  reduce using rule 76 (otherwise)


State 158

   79 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal _DOTDOT literal _RPAREN . $@14 statement

    $default  reduce using rule 78 ($@14)

    $@14  go to state 161


State 159

   75 case_body: statement $@13 . _BREAK _SEMICOLON

    _BREAK  shift, and go to state 162


State 160

   77 otherwise: _OTHERWISE _ARROW statement _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 163


State 161

   79 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal _DOTDOT literal _RPAREN $@14 . statement

    _IF        shift, and go to state 34
    _RETURN    shift, and go to state 35
    _ID        shift, and go to state 36
    _LBRACKET  shift, and go to state 37
    _WHILE     shift, and go to state 39
    _CHECK     shift, and go to state 40

    $default  reduce using rule 31 ($@5)

    statement             go to state 164
    $@5                   go to state 42
    increment             go to state 43
    compound_statement    go to state 44
    assignment_statement  go to state 45
    function_call         go to state 46
    if_statement          go to state 47
    if_part               go to state 48
    check_statement       go to state 49
    while_statement       go to state 50
    return_statement      go to state 51


State 162

   75 case_body: statement $@13 _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 165


State 163

   77 otherwise: _OTHERWISE _ARROW statement _BREAK _SEMICOLON .

    $default  reduce using rule 77 (otherwise)


State 164

   79 for_statement: _FOR _LPAREN _TYPE _ID _ASSIGN literal _DOTDOT literal _RPAREN $@14 statement .

    $default  reduce using rule 79 (for_statement)


State 165

   75 case_body: statement $@13 _BREAK _SEMICOLON .

    $default  reduce using rule 75 (case_body)
